name: Build ESP32-C3 OLED Project

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: |
          ~/.platformio/.cache
          ~/.platformio/penv
        key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-pio-
          
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        
    - name: Build project
      run: pio run --environment esp32-c3
      
    - name: Prepare firmware files for web flasher
      run: |
        mkdir -p docs/firmware
        cp .pio/build/esp32-c3/firmware.bin docs/firmware/
        cp .pio/build/esp32-c3/bootloader.bin docs/firmware/
        cp .pio/build/esp32-c3/partitions.bin docs/firmware/
        
        # Create a build info JSON file
        echo "{
          \"build_date\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
          \"commit_sha\": \"${{ github.sha }}\",
          \"branch\": \"${{ github.ref_name }}\",
          \"run_number\": \"${{ github.run_number }}\"
        }" > docs/firmware/build-info.json
      
    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: esp32-c3-firmware
        path: |
          .pio/build/esp32-c3/firmware.bin
          .pio/build/esp32-c3/bootloader.bin
          .pio/build/esp32-c3/partitions.bin
        retention-days: 90

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        force_orphan: true

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        
    - name: Run static analysis (optional)
      run: pio check --verbose
      continue-on-error: true 