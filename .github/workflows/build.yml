name: Build and Test ESP32-C3 OLED Project

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: |
          ~/.platformio/.cache
          ~/.platformio/penv
        key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-pio-
          
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        
    - name: Build project
      run: pio run --environment esp32-c3
      
    - name: Build test environment
      run: pio run --environment esp32-c3-test
      
    - name: Run unit tests
      run: pio test --environment esp32-c3-test --verbose
      continue-on-error: true
      
    - name: Run static analysis (optional)
      run: pio check --verbose
      continue-on-error: true
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: firmware-build
        path: |
          .pio/build/esp32-c3/firmware.*
          .pio/build/esp32-c3-test/firmware.*
        retention-days: 30

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        
    - name: Check code formatting (if using clang-format)
      run: |
        if [ -f ".clang-format" ]; then
          sudo apt-get update
          sudo apt-get install -y clang-format
          find src/ -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror
        else
          echo "No .clang-format file found, skipping format check"
        fi
      continue-on-error: true
      
    - name: Run PlatformIO check
      run: pio check --verbose --fail-on-defect medium
      continue-on-error: true 